version: "3.7"

services:
  movie_service:
    image: fastapi-microservices_movie_service:latest
    container_name: movie_service
    depends_on:
      - pgsql_db
      - cast_service
    build: ./movie-service
    #command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8080
    volumes:
      - ./movie-service/:/app/
    ports:
      - 8081:8080
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgsql_db:5432/${POSTGRES_MOVIE_DB}
      - CAST_SERVICE_HOST_URL=http://cast_service:8080/api/v1/casts

  cast_service:
    image: fastapi-microservices_cast_service:latest
    container_name: cast_service
    depends_on:
      - pgsql_db
    build: ./cast-service
    #command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8080
    volumes:
      - ./cast-service/:/app/
    ports:
      - 8082:8080
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgsql_db:5432/${POSTGRES_CAST_DB}

  pgsql_db:
    image: postgres:latest
    container_name: pgsql_db
    ports:
      - 5432:5432
    volumes:
      - ./scripts/1-init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MOVIE_DB=${POSTGRES_MOVIE_DB}
      - POSTGRES_CAST_DB=${POSTGRES_CAST_DB}

volumes:
  postgres_data: {}
  scripts: {}
